{"version":3,"sources":["../../../src/dataBase/schemas/usuarioSchema.js"],"names":["schema","mongoose","Schema","usuarioSchema","nombre","type","String","required","apellido","email","genero","clave","imagenPerfil","enfermedades","Types","ObjectId","ref","signosVitales","timestamps","prototype","valueOf","toString","pre","next","usuario","bcrypt","genSalt","error","salt","hash"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,MAAM,GAAGC,qBAASC,MAAxB;AAEA,IAAMC,aAAa,GAAG,IAAIH,MAAJ,CAClB;AACII,EAAAA,MAAM,EAAE;AACJC,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GADZ;AAKIC,EAAAA,QAAQ,EAAE;AACNH,IAAAA,IAAI,EAAEC,MADA;AAENC,IAAAA,QAAQ,EAAE;AAFJ,GALd;AASIE,EAAAA,KAAK,EAAE;AACHJ,IAAAA,IAAI,EAAEC,MADH;AAEHC,IAAAA,QAAQ,EAAE;AAFP,GATX;AAaIG,EAAAA,MAAM,EAAE;AACJL,IAAAA,IAAI,EAAEC,MADF;AAEJ,YAAM,CAAC,QAAD,EAAW,OAAX,CAFF;AAGJC,IAAAA,QAAQ,EAAE;AAHN,GAbZ;AAkBII,EAAAA,KAAK,EAAE;AACHN,IAAAA,IAAI,EAAEC,MADH;AAEHC,IAAAA,QAAQ,EAAE;AAFP,GAlBX;AAsBIK,EAAAA,YAAY,EAAE;AACVP,IAAAA,IAAI,EAAEC;AADI,GAtBlB;AAyBIO,EAAAA,YAAY,EAAE,CAAC;AACXR,IAAAA,IAAI,EAAEL,MAAM,CAACc,KAAP,CAAaC,QADR;AAEXC,IAAAA,GAAG,EAAE;AAFM,GAAD,CAzBlB;AA6BIC,EAAAA,aAAa,EAAE,CAAC;AACZZ,IAAAA,IAAI,EAAEL,MAAM,CAACc,KAAP,CAAaC,QADP;AAEZC,IAAAA,GAAG,EAAE;AAFO,GAAD;AA7BnB,CADkB,EAmClB;AAAEE,EAAAA,UAAU,EAAE;AAAd,CAnCkB,CAAtB;;AAsCAjB,qBAASa,KAAT,CAAeC,QAAf,CAAwBI,SAAxB,CAAkCC,OAAlC,GAA4C,YAAY;AACpD,SAAO,KAAKC,QAAL,EAAP;AACH,CAFD;;AAIAlB,aAAa,CAACmB,GAAd,CAAkB,MAAlB,EAA0B,UAASC,IAAT,EAAc;AACpC,MAAIC,OAAO,GAAG,IAAd;;AACAC,qBAAOC,OAAP,CAAe,EAAf,EAAmB,UAASC,KAAT,EAAgBC,IAAhB,EAAsB;AACrCH,uBAAOI,IAAP,CAAYL,OAAO,CAACb,KAApB,EAA2BiB,IAA3B,EAAiC,UAASD,KAAT,EAAgBE,IAAhB,EAAqB;AAClD,UAAGF,KAAH,EAAU,OAAOJ,IAAI,CAACI,KAAD,CAAX;AACVH,MAAAA,OAAO,CAACb,KAAR,GAAgBkB,IAAhB;AACAN,MAAAA,IAAI;AACP,KAJD;AAKH,GAND;AAOH,CATD;eAWepB,a","sourcesContent":["import mongoose from 'mongoose';\r\nimport bcrypt from 'bcrypt';\r\n\r\nconst schema = mongoose.Schema;\r\n\r\nconst usuarioSchema = new schema(\r\n    {\r\n        nombre: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        apellido: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        email: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        genero: {\r\n            type: String,\r\n            enum: ['Hombre', 'Mujer'],\r\n            required: true\r\n        },\r\n        clave: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        imagenPerfil: {\r\n            type: String,\r\n        },\r\n        enfermedades: [{\r\n            type: schema.Types.ObjectId,\r\n            ref: 'enfermedades'\r\n        }],\r\n        signosVitales: [{\r\n            type: schema.Types.ObjectId,\r\n            ref: 'signosVitales'\r\n        }]\r\n    },\r\n    { timestamps: true }\r\n);\r\n\r\nmongoose.Types.ObjectId.prototype.valueOf = function () {\r\n    return this.toString();\r\n}\r\n\r\nusuarioSchema.pre(\"save\", function(next){\r\n    let usuario = this;\r\n    bcrypt.genSalt(10, function(error, salt) {\r\n        bcrypt.hash(usuario.clave, salt, function(error, hash){\r\n            if(error) return next(error);\r\n            usuario.clave = hash;\r\n            next();\r\n        });\r\n    });\r\n});\r\n\r\nexport default usuarioSchema;"],"file":"usuarioSchema.js"}