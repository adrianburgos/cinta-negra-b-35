{"version":3,"sources":["../../../src/graphql/acciones/accionesUsuario.js"],"names":["Date","prototype","agregarDias","dias","date","valueOf","setDate","getDate","crearToken","dataUsuario","exp","getTime","payload","_id","email","nombre","apellido","genero","token","jwt","sign","process","env","JWT","addUsuarioAccion","usuario","UsuarioModel","create","nuevoUsuario","console","log","updateUsuarioAccion","filter","update","findOneAndUpdate","buscarUsuarioAccion","findOne","iniciarSesionAccion","correoUsuario","clave","bcrypt","compare","valido","getUsuarioAccion","findById","populate","infoUsuario","getEnfermedadesFromUsuarioAccion","usuarioID","enfermedades","getSignosVitalesFromUsuarioAccion","signosVitales"],"mappings":"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","sourcesContent":["import jwt from 'jsonwebtoken'\r\nimport bcrypt from 'bcrypt'\r\nimport { UsuarioModel } from '../../dataBase/models'\r\n\r\n\r\nDate.prototype.agregarDias = function (dias) {\r\n    const date = new Date(this.valueOf());\r\n    date.setDate(date.getDate() + dias);\r\n    return date;\r\n}\r\n\r\nconst crearToken = (dataUsuario) => {\r\n    //fecha de expiracion para el token (hoy + 5 dias)\r\n    const exp = new Date().agregarDias(5).getTime();\r\n    const payload = {\r\n        _id: dataUsuario._id,\r\n        email: dataUsuario.email,\r\n        nombre: dataUsuario.nombre,\r\n        apellido: dataUsuario.apellido,\r\n        genero: dataUsuario.genero,\r\n        exp,\r\n    }\r\n    const token = jwt.sign(payload, process.env.JWT);\r\n    return token;\r\n}\r\n\r\nconst addUsuarioAccion = async (usuario) => {\r\n    try {\r\n        // return await UsuarioModel.create(usuario);\r\n        const nuevoUsuario = await UsuarioModel.create(usuario);\r\n        const token = crearToken(nuevoUsuario);\r\n        return { token };\r\n    } catch (error) {\r\n        console.log(\"TCL: addUsuarioAccion -> error\", error);\r\n    }\r\n};\r\n\r\n/**\r\n * Actualiza al usuario indicado en el filtro\r\n * @param {JSON} filter - valores para realizar la consulta\r\n * @param {JSON} update - datos a ser acutalizados\r\n */\r\nconst updateUsuarioAccion = async (filter, update) => {\r\n    try {\r\n        return UsuarioModel.findOneAndUpdate(filter, update, { new: true }); // { new: true } para que devuelva el objeto actualizado\r\n    } catch (error) {\r\n        console.log(\"TCL: updateUsuarioAccion -> error\", error);\r\n    }\r\n}\r\n\r\nconst buscarUsuarioAccion = async (filter) => {\r\n    try {\r\n        return await UsuarioModel.findOne(filter);\r\n    } catch (error) {\r\n        console.log(\"TCL: buscarUsuarioAccion -> error\", error);\r\n    }\r\n}\r\n\r\nconst iniciarSesionAccion = async (correoUsuario, clave) => {\r\n    try {\r\n        const filter = { email: correoUsuario };\r\n        const usuario = await buscarUsuarioAccion(filter);\r\n        console.log(usuario);\r\n        const valido = await bcrypt.compare(clave, usuario.clave);\r\n        if (valido) {\r\n            const token = crearToken(usuario);\r\n            return { token };\r\n        }\r\n    } catch (error) {\r\n        console.log(\"TCL: iniciarSesionAccion -> error\", error);\r\n    }\r\n}\r\n\r\nconst getUsuarioAccion = async (usuario) => {\r\n    try {\r\n        const infoUsuario = await UsuarioModel.findById(usuario._id).populate('enfermedades').populate('signosVitales');\r\n        console.log(\"TCL: getUsuarioAccion -> infoUsuario\", infoUsuario)\r\n        return infoUsuario;\r\n    } catch (error) {\r\n        console.log(\"TCL: getUsuarioAccion -> error\", error);\r\n    }\r\n}\r\n\r\nconst getEnfermedadesFromUsuarioAccion = async (usuarioID) => {\r\n    try {\r\n        const infoUsuario = await UsuarioModel.findById(usuarioID).populate('enfermedades');\r\n        const { enfermedades } = infoUsuario;\r\n        return enfermedades;\r\n    } catch (error) {\r\n        console.log(\"TCL: getEnfermedadesFromUsuarioAccion -> error\", error)\r\n    }\r\n}\r\n\r\nconst getSignosVitalesFromUsuarioAccion = async (usuarioID) => {\r\n    try {\r\n        const infoUsuario = await UsuarioModel.findById(usuarioID).populate('signosVitales');\r\n        const { signosVitales } = infoUsuario;\r\n        return signosVitales;\r\n    } catch (error) {\r\n        console.log(\"TCL: getSignosVitalesFromUsuarioAccion -> error\", error)\r\n    }\r\n}\r\n\r\nexport {\r\n    addUsuarioAccion,\r\n    updateUsuarioAccion,\r\n    buscarUsuarioAccion,\r\n    iniciarSesionAccion,\r\n    getUsuarioAccion,\r\n    getEnfermedadesFromUsuarioAccion,\r\n    getSignosVitalesFromUsuarioAccion,\r\n}"],"file":"accionesUsuario.js"}