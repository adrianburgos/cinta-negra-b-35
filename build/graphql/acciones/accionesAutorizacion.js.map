{"version":3,"sources":["../../../src/graphql/acciones/accionesAutorizacion.js"],"names":["AuthDirective","field","resolve","defaultFieldResolver","args","context","usuario","apply","AuthenticationError","SchemaDirectiveVisitor","getContext","req","token","headers","authorization","undefined","jwt","verify","process","env","JWT","error","result","_id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAEA;;;;;;IAMMA,a;;;;;;;;;;;;yCACmBC,K,EAAO;AAAA,2BACmBA,KADnB,CAChBC,OADgB;AAAA,UAChBA,OADgB,+BACNC,oBADM;AAExBF,MAAAA,KAAK,CAACC,OAAN;AAAA;AAAA;AAAA;AAAA,mCAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAmBE,IAAnB;AAAmBA,kBAAAA,IAAnB;AAAA;;AACNC,gBAAAA,OADM,GACID,IAAI,CAAC,CAAD,CADR;;AAAA,qBAERC,OAAO,CAACC,OAFA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAGKJ,OAAO,CAACK,KAAR,CAAc,IAAd,EAAoBH,IAApB,CAHL;;AAAA;AAAA;;AAAA;AAAA,sBAKF,IAAII,wCAAJ,CAAwB,0BAAxB,CALE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAhB;AAQH;;;EAXuBC,2C;;;;AAc5B,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAS;AACxB,MAAI;AACA,QAAMC,KAAK,GAAGD,GAAG,CAACE,OAAJ,CAAYC,aAA1B;AACA,QAAI,yBAAOF,KAAP,cAAwBG,SAAxB,0DAAwBA,SAAxB,EAAJ,EAAuC,OAAOJ,GAAP;AAEvC,WAAOK,yBAAIC,MAAJ,CACHL,KADG,EAEHM,OAAO,CAACC,GAAR,CAAYC,GAFT;AAAA;AAAA;AAAA;AAAA;AAAA,mCAGH,kBAAgBC,KAAhB,EAAuBC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAIID,KAJJ;AAAA;AAAA;AAAA;;AAAA,kDAIkBV,GAJlB;;AAAA;AAAA;AAAA;AAAA,uBAM0B,0CAAoB;AAAEY,kBAAAA,GAAG,EAAED,MAAM,CAACC;AAAd,iBAApB,CAN1B;;AAAA;AAMUjB,gBAAAA,OANV;AAAA,oEAOgBK,GAPhB;AAOqBL,kBAAAA,OAAO,EAAPA;AAPrB;;AAAA;AAAA;AAAA;AAAA,kDASWK,GATX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHG;;AAAA;AAAA;AAAA;AAAA,QAAP;AAeH,GAnBD,CAmBE,OAAOU,KAAP,EAAc;AACZ,WAAOV,GAAP;AACH;AACJ,CAvBD","sourcesContent":["import jwt from 'jsonwebtoken';\r\n\r\nimport { buscarUsuarioAccion } from './accionesUsuario';\r\n\r\nimport {\r\n    SchemaDirectiveVisitor,\r\n    AuthenticationError\r\n} from 'apollo-server-express'\r\n\r\n//permite extender las funcionalidades de los querys o mutations\r\nclass AuthDirective extends SchemaDirectiveVisitor {\r\n    visitFieldDefinition(field) {\r\n        const { resolve = defaultFieldResolver } = field;\r\n        field.resolve = async function (...args) {\r\n            const context = args[2];\r\n            if (context.usuario) {\r\n                return await resolve.apply(this, args);\r\n            } else {\r\n                throw new AuthenticationError(\"Necesitas iniciar sesion\");\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst getContext = (req) => {\r\n    try {\r\n        const token = req.headers.authorization;\r\n        if (typeof token === typeof undefined) return req;\r\n\r\n        return jwt.verify(\r\n            token,\r\n            process.env.JWT,\r\n            async function (error, result) {\r\n            /**\r\n             * result trae la seccion del payload del token verificado\r\n             */\r\n            if (error) return req;\r\n            try {\r\n                const usuario = await buscarUsuarioAccion({ _id: result._id })\r\n                return { ...req, usuario }\r\n            } catch (error) {\r\n                return req;\r\n            }\r\n        })\r\n    } catch (error) {\r\n        return req;\r\n    }\r\n}\r\n\r\nexport {\r\n    getContext,\r\n    AuthDirective\r\n}\r\n"],"file":"accionesAutorizacion.js"}